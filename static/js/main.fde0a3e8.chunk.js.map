{"version":3,"sources":["Delete.js","Collapsible.js","Home.js","NewContact.js","Edit.js","App.js","reportWebVitals.js","index.js"],"names":["Popup","className","class","this","props","text","onClick","removeContact","closePopup","React","Component","Delete","state","showPopup","setState","setContacts","contacts","filter","_","idx","index","togglePopup","bind","firstName","lastName","Collapsible","open","togglePanel","e","children","Home","id","to","map","item","phone","email","NewContact","redirect","handleInputChange","target","value","name","onSubmit","push","preventDefault","type","placeholder","onChange","required","pattern","Edit","contact","match","params","defaultValue","App","useState","path","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fde0a3e8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n/*Popup component with message*/\r\nclass Popup extends React.ComponentÂ {\r\n  render() {\r\n    return (\r\n      <div className='popup'>\r\n        <div className='popup_inner'>\r\n            <div class=\"container-msg\">\r\n              <h1 class=\"message\">{this.props.text}</h1>\r\n              <div class=\"message-btns\">\r\n              <button onClick={this.props.removeContact} className=\"yes\">Yes</button>\r\n              <button onClick={this.props.closePopup} className=\"cancel\">Cancel</button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*Component to delete contact from contactList object*/\r\nclass Delete extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPopup: false,\r\n    };\r\n  }\r\n\r\n  /*function to open and close the popup*/\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  /*function to remove contact from contactList, identifying by index, then closing popup*/\r\n  removeContact(){\r\n    this.props.setContacts(this.props.contacts.filter((_, idx) => idx !== this.props.index));\r\n    this.togglePopup();\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <div className='exit'>\r\n        <i class=\"fas fa-trash\" onClick={this.togglePopup.bind(this)}></i>\r\n        {this.state.showPopup ? \r\n          <Popup\r\n            /*message and button functions passed to popup component*/\r\n            text={`Are you sure you want to delete ${this.props.contacts[this.props.index].firstName} ${this.props.contacts[this.props.index].lastName}'s contact?`}\r\n            closePopup={this.togglePopup.bind(this)}\r\n            removeContact={this.removeContact.bind(this)}\r\n          />\r\n          : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Delete;","import React from \"react\";\r\n\r\nclass Collapsible extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        }\r\n        this.togglePanel = this.togglePanel.bind(this);\r\n    }\r\n\r\n    /*function to open and close dropdown for email info*/\r\n    togglePanel(e){\r\n        this.setState({open: !this.state.open});\r\n    }\r\n\r\n    render() {\r\n      return (\r\n      <div>\r\n        <div onClick={(e)=>this.togglePanel(e)}>\r\n            {/*toggles between up and down chevron button*/}\r\n            <i className={this.state.open ? \"fas fa-chevron-up\" : \"fas fa-chevron-down\"}></i>\r\n        </div>\r\n        {/*toggles showing email address*/}\r\n        {this.state.open ? (\r\n            <div className='content'>\r\n                {this.props.children}\r\n            </div>\r\n            ) : null}\r\n      </div>\r\n      );\r\n    }\r\n}\r\n\r\n  export default Collapsible;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './Home.css';\r\nimport Delete from './Delete';\r\nimport Collapsible from './Collapsible';\r\n\r\nconst Home = ({contacts, setContacts}) => {\r\n  return(\r\n    <div id=\"container\">\r\n      <h1 id=\"home-title\">Welcome To Your Contact List</h1>\r\n      {/*Link to New Contact Page*/}\r\n      <Link to=\"/newcontact\"><button className=\"new-btn\"><i className=\"fas fa-plus-square\"></i>Add New Contact</button></Link>\r\n      <ul>\r\n        {/*mapping through contactList in app.js and rendering card on page, identifying index for delete and edit pages*/}\r\n        {contacts.map((item, index) => (\r\n        <li key={item.firstName}>\r\n            {/*passing props to delete popup component*/}\r\n            <Delete contacts={contacts} setContacts={setContacts} index={index}/>\r\n            <div><strong>First Name:</strong> {item.firstName}</div>\r\n            <div><strong>Last Name:</strong> {item.lastName}</div>\r\n            <div><strong>Phone Number:</strong> {item.phone}</div>\r\n            {/*dropdown component to view email*/}\r\n            <Collapsible>\r\n            <div><strong>Email Address:</strong> {item.email}</div>\r\n            </Collapsible>\r\n            {/*Link to edit page, passing index to url to link to specific contactList index for editing*/}\r\n            <Link to={`/edit/${index}`}><button className=\"edit-btn\">Edit Contact</button></Link>\r\n        </li>\r\n        ))}\r\n      </ul>\r\n    </div> \r\n  );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport \"./Form.css\";\r\n\r\nclass NewContact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phone: '',\r\n            email: '',\r\n            redirect: false,\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    /*Updating key value of input*/\r\n    handleInputChange(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            /*Reditect to homepage after form is filled and user presses submit, updates setContacts and adds new input values*/\r\n            this.state.redirect ?\r\n            <Redirect to=\"/\" />\r\n            :\r\n            <div className=\"container\">\r\n                {/*Adding new contact card to contactList*/}\r\n                <form onSubmit={(e) => {\r\n                    this.props.contacts.push({\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        phone: this.state.phone,\r\n                        email: this.state.email,\r\n                    });\r\n                    /*Updating state of contactList and redirecting to home page when submitting*/\r\n                    this.props.setContacts(this.props.contacts);\r\n                    this.setState({redirect: true});\r\n                    e.preventDefault();\r\n                }}>\r\n                    <h1 id=\"contact-title\">New Contact Page</h1>\r\n                        <div className=\"input-container\">\r\n                        <h2 id=\"subtitle\">Enter Contact Card Information</h2>\r\n                        <h3>First Name:</h3>\r\n                        <input name=\"firstName\" type=\"text\" placeholder=\"First Name*\" value={this.state.firstName} onChange={this.handleInputChange} required/>\r\n                        <h3>Last Name:</h3>\r\n                        <input name=\"lastName\" type=\"text\" placeholder=\"Last Name*\" value={this.state.lastName} onChange={this.handleInputChange} required/>\r\n                        <h3>Phone Number:</h3>\r\n                        <input name=\"phone\" type=\"tel\" placeholder=\"555-555-5555*\" value={this.state.phone} onChange={this.handleInputChange} pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required/>\r\n                        <h3>Email Address:</h3>\r\n                        <input name=\"email\" type=\"email\" placeholder=\"Email*\" value={this.state.email} onChange={this.handleInputChange} required/>\r\n                        <div class=\"contact-buttons\">\r\n                            <button type=\"submit\" className=\"add-contact\">Add Contact</button>\r\n                            {/*Linking back to home page without creating new contact*/}\r\n                            <Link to=\"/\"><button className=\"add-cancel\">Cancel</button></Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewContact;","import React from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport './Form.css'\r\n\r\nclass Edit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const contact = this.props.contacts[this.props.match.params.index];\r\n        this.state= {\r\n            firstName: contact.firstName,\r\n            lastName: contact.lastName,\r\n            phone: contact.phone,\r\n            email: contact.email,\r\n            redirect: false,\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    /*Updating key value of input*/\r\n    handleInputChange(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            /*Reditect to homepage after form is edited and user presses submit, updates setContacts to new input values*/\r\n            this.state.redirect ?\r\n            <Redirect to=\"/\" />\r\n            :\r\n            <div className=\"container\">\r\n                {/*Updating specficic index contact with new form input info*/}\r\n                <form onSubmit={(e) => {\r\n                    this.props.contacts[this.props.match.params.index] = {\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        phone: this.state.phone,\r\n                        email: this.state.email,\r\n                    };\r\n                    /*Updating state of contactList and redirecting to home page when submitting*/\r\n                    this.props.setContacts(this.props.contacts);\r\n                    this.setState({redirect: true});\r\n                    e.preventDefault();\r\n                }}>\r\n                    <h1 id=\"contact-title\">Edit Contact</h1>\r\n                        <div className=\"input-container\">\r\n                        <h2 id=\"subtitle\">Edit the Information below</h2>\r\n                        <h3>First Name:</h3>\r\n                        <input name=\"firstName\" type=\"text\" defaultValue={this.state.firstName} onChange={this.handleInputChange} required/>\r\n                        <h3>Last Name:</h3>\r\n                        <input name=\"lastName\" type=\"text\" defaultValue={this.state.lastName} onChange={this.handleInputChange} required/>\r\n                        <h3>Phone Number:</h3>\r\n                        <input name=\"phone\" type=\"tel\" defaultValue={this.state.phone} onChange={this.handleInputChange} pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required/>\r\n                        <h3>Email Address:</h3>\r\n                        <input name=\"email\" type=\"email\" defaultValue={this.state.email} onChange={this.handleInputChange} required/>\r\n                        <div class=\"contact-buttons\">\r\n                            <button type=\"submit\" className=\"add-contact\">Save</button>\r\n                            {/*Linking back to home page without editing*/}\r\n                            <Link to=\"/\"><button className=\"add-cancel\">Cancel</button></Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Edit;","import React, {useState} from \"react\";\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './Home';\nimport NewContact from './NewContact';\nimport Edit from './Edit';\n\nfunction App() { \n  /*Contact List - Hard coded and using useState for list*/\n  const contactList = [\n    {\n      firstName: 'Nicole',\n      lastName: 'Fastow',\n      phone: '281-768-1068',\n      email: 'nfastow@gmail.com'\n    },\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n      phone: '281-222-1010',\n      email: 'jdoe@gmail.com'\n    },\n    {\n      firstName: 'Anna',\n      lastName: 'Smith',\n      phone: '512-444-1888',\n      email: 'asmith@gmail.com'\n    },\n  ];\n\n  const [contacts, setContacts] = useState(contactList);\n\n  /*Routing to Home, New Contact and Edit*/\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact >\n          <Home contacts={contacts} setContacts={setContacts}/>\n        </Route>\n        <Route path=\"/newcontact\">\n          <NewContact contacts={contacts} setContacts={setContacts}/>  \n        </Route>\n        {/*route to edit page, index identified in mapping in home page to link to specific contact for editing for URL.\n        Pass all the props set by route down to edit component, dynamically determines what to render*/}\n        <Route path=\"/edit/:index\" render={(props) => <Edit contacts={contacts} setContacts={setContacts} {...props}/>} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}